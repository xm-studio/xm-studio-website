{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\src\\\\resources\\\\icons\\\\svgr\\\\CompassButton\\\\index.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  cursor: pointer;\\n  display: inline-block;\\n  height: 3rem;\\n  position: relative;\\n  width: 3rem;\\n \\n  /* svg animations */\\n  @keyframes rotate_in_cw {\\n    0% { transform: rotate(0deg) }\\n    100% { transform: rotate(45deg) }\\n  }\\n  @keyframes rotate_out_cw {\\n    0% { transform: rotate(45deg) }\\n    100% { transform: rotate(0deg) }\\n  }\\n  @keyframes rotate_in_ccw {\\n    0% { transform: rotate(0deg) }\\n    100% { transform: rotate(-45deg) }\\n  }\\n  @keyframes rotate_out_ccw {\\n    0% { transform: rotate(-45deg) }\\n    100% { transform: rotate(0deg) }\\n  }\\n  @keyframes draw_in {\\n    50% { stroke-dashoffset: 100%; }\\n    100% { stroke-dashoffset: 0%; }\\n  }\\n  @keyframes draw_out {\\n    50% { stroke-dashoffset: 0%; }\\n    100% { stroke-dashoffset: 100%; }\\n  }\\n  .svg-1 {\\n    animation: \", \" 0.8s;\\n    animation-fill-mode: forwards;\\n    .line-1 {\\n      animation: \", \" 0.8s;\\n      animation-fill-mode: forwards;\\n    }\\n    .line-3 {\\n      animation: \", \" 0.8s;\\n      animation-fill-mode: forwards;\\n    }\\n  }\\n  .svg-2 {\\n    animation: \", \" 0.8s;\\n    animation-fill-mode: forwards;\\n  }\\n  /* default line offsets */\\n  .svg-1 {\\n    .line-1, .line-3 {\\n      stroke-dashoffset: \", \";\\n    }\\n  }\\n  svg {\\n    height: 100%;\\n    overflow: visible;\\n    width: 100%;\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    path {\\n      stroke: #000;\\n      stroke-dasharray: 100%;\\n      stroke-linecap: round;\\n      stroke-miterlimit: 10;\\n      stroke-width: 20px;\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as MenuToggle1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../svg/menuToggle1.svg\";\nimport { ReactComponent as MenuToggle2 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../svg/menuToggle2.svg\";\nconst ToggleWrapper = styled.span(_templateObject(), props => props.status === 'open' ? \"rotate_in_cw\" : \"rotate_out_cw\", props => props.status === 'open' ? \"draw_out\" : \"draw_in\", props => props.status === 'open' ? \"draw_out\" : \"draw_in\", props => props.status === 'open' ? \"rotate_in_ccw\" : \"rotate_out_ccw\", props => props.status === 'open' ? \"0%\" : \"100%\");\nexport const MenuToggle = () => {\n  const _React$useState = React.useState('default'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        iconStatus = _React$useState2[0],\n        setIconStatus = _React$useState2[1];\n\n  const toggle = () => {\n    iconStatus === 'default' ? setIconStatus('open') : setIconStatus('default');\n  };\n\n  return React.createElement(ToggleWrapper, {\n    onClick: () => {\n      toggle();\n    },\n    status: iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(MenuToggle1, {\n    className: \"svg-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(MenuToggle2, {\n    className: \"svg-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }));\n};\nexport default MenuToggle;","map":{"version":3,"sources":["C:/Users/bhava/Documents/GitHub/my-app4/src/resources/icons/svgr/CompassButton/index.jsx"],"names":["React","styled","ToggleWrapper","span","props","status","MenuToggle","useState","iconStatus","setIconStatus","toggle"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAIA,MAAMC,aAAa,GAAGD,MAAM,CAACE,IAAV,oBAiCFC,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,mCAjCP,EAoCAD,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,yBApCT,EAwCAD,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,yBAxCT,EA6CFD,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,qCA7CP,EAmDQD,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,MAAjB,gBAnDjB,CAAnB;AAuEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA,0BAEMN,KAAK,CAACO,QAAN,CAAe,SAAf,CAFN;AAAA;AAAA,QAEvBC,UAFuB;AAAA,QAEXC,aAFW;;AAI9B,QAAMC,MAAM,GAAG,MAAM;AACnBF,IAAAA,UAAU,KAAK,SAAf,GACIC,aAAa,CAAC,MAAD,CADjB,GAEIA,aAAa,CAAC,SAAD,CAFjB;AAGD,GAJD;;AAMA,SACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,MAAM;AAAI,KAD7B;AAEE,IAAA,MAAM,EAAEF,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD,CAnBM;AAqBP,eAAeF,UAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {ReactComponent as MenuToggle1} from '../../svg/menuToggle1.svg';\r\nimport {ReactComponent as MenuToggle2} from '../../svg/menuToggle2.svg';\r\n\r\nconst ToggleWrapper = styled.span`\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  height: 3rem;\r\n  position: relative;\r\n  width: 3rem;\r\n \r\n  /* svg animations */\r\n  @keyframes rotate_in_cw {\r\n    0% { transform: rotate(0deg) }\r\n    100% { transform: rotate(45deg) }\r\n  }\r\n  @keyframes rotate_out_cw {\r\n    0% { transform: rotate(45deg) }\r\n    100% { transform: rotate(0deg) }\r\n  }\r\n  @keyframes rotate_in_ccw {\r\n    0% { transform: rotate(0deg) }\r\n    100% { transform: rotate(-45deg) }\r\n  }\r\n  @keyframes rotate_out_ccw {\r\n    0% { transform: rotate(-45deg) }\r\n    100% { transform: rotate(0deg) }\r\n  }\r\n  @keyframes draw_in {\r\n    50% { stroke-dashoffset: 100%; }\r\n    100% { stroke-dashoffset: 0%; }\r\n  }\r\n  @keyframes draw_out {\r\n    50% { stroke-dashoffset: 0%; }\r\n    100% { stroke-dashoffset: 100%; }\r\n  }\r\n  .svg-1 {\r\n    animation: ${props => props.status === 'open' ? `rotate_in_cw` : `rotate_out_cw`} 0.8s;\r\n    animation-fill-mode: forwards;\r\n    .line-1 {\r\n      animation: ${props => props.status === 'open' ? `draw_out` : `draw_in`} 0.8s;\r\n      animation-fill-mode: forwards;\r\n    }\r\n    .line-3 {\r\n      animation: ${props => props.status === 'open' ? `draw_out` : `draw_in`} 0.8s;\r\n      animation-fill-mode: forwards;\r\n    }\r\n  }\r\n  .svg-2 {\r\n    animation: ${props => props.status === 'open' ? `rotate_in_ccw` : `rotate_out_ccw`} 0.8s;\r\n    animation-fill-mode: forwards;\r\n  }\r\n  /* default line offsets */\r\n  .svg-1 {\r\n    .line-1, .line-3 {\r\n      stroke-dashoffset: ${props => props.status === 'open' ? `0%` : `100%`};\r\n    }\r\n  }\r\n  svg {\r\n    height: 100%;\r\n    overflow: visible;\r\n    width: 100%;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n    path {\r\n      stroke: #000;\r\n      stroke-dasharray: 100%;\r\n      stroke-linecap: round;\r\n      stroke-miterlimit: 10;\r\n      stroke-width: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MenuToggle = () => {\r\n\r\n  const [iconStatus, setIconStatus] = React.useState('default');\r\n\r\n  const toggle = () => {\r\n    iconStatus === 'default'\r\n      ? setIconStatus('open')\r\n      : setIconStatus('default');\r\n  }\r\n\r\n  return (\r\n    <ToggleWrapper\r\n      onClick={() => { toggle() }}\r\n      status={iconStatus}\r\n    >\r\n      <MenuToggle1 className='svg-1' />\r\n      <MenuToggle2 className='svg-2' />\r\n    </ToggleWrapper>\r\n  );\r\n}\r\n\r\nexport default MenuToggle;"]},"metadata":{},"sourceType":"module"}