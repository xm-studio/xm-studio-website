{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\bhava\\\\Documents\\\\GitHub\\\\my-app4\\\\src\\\\resources\\\\icons\\\\svgr\\\\CompassButton\\\\index.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    cursor: pointer;\\n    display: inline-block;\\n    height: 50px;\\n    position: relative;\\n    width: 50px;\\n\\n    /*svg animations*/\\n    @keyframes draw_in {\\n        50% { stroke-dashoffset: 100%; }\\n        100% { stroke-dashoffset: 0%; }\\n      }\\n      @keyframes draw_out {\\n        50% { stroke-dashoffset: 0%; }\\n        100% { stroke-dashoffset: 100%; }\\n      }\\n      @keyframes rotate_in_ccw {\\n        0% { transform: rotate(0deg); }\\n        100% { transform: rotate(180deg); }\\n      }\\n      @keyframes colorchange{\\n        from{stroke:'#2C6975';}\\n        to {stroke:'black';}\\n      }\\n    .svg1{\\n        .compass_needle{\\n            animation:colorchange 0.8s;\\n        } \\n    }\\n\\n    svg{\\n        circle, line, polygon, path{\\n            stroke: black;\\n            stroke-linecap: round;\\n            stroke-miterlimit: 10;\\n            stroke-width: 5px;\\n        }\\n    }\\n\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReactComponent as svg1 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../svg/Compass.svg\";\nimport { ReactComponent as svg2 } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../svg/Compass.svg\";\nconst ToggleWrapper = styled.span(_templateObject());\nexport const CompassButton = () => {\n  const _React$useState = React.useState('default'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        iconStatus = _React$useState2[0],\n        setIconStatus = _React$useState2[1];\n\n  const toggle = () => {\n    iconStatus === 'default' ? setIconStatus('open') : setIconStatus('default');\n  };\n\n  return React.createElement(ToggleWrapper, {\n    onClick: () => {\n      toggle();\n    },\n    status: iconStatus,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"svg1\", {\n    className: \"svg1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"svg2\", {\n    className: \"svg2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};","map":{"version":3,"sources":["C:/Users/bhava/Documents/GitHub/my-app4/src/resources/icons/svgr/CompassButton/index.jsx"],"names":["React","styled","ToggleWrapper","span","CompassButton","useState","iconStatus","setIconStatus","toggle"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAIA,MAAMC,aAAa,GAAGD,MAAM,CAACE,IAAV,mBAAnB;AAwCA,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA,0BACIJ,KAAK,CAACK,QAAN,CAAe,SAAf,CADJ;AAAA;AAAA,QACzBC,UADyB;AAAA,QACbC,aADa;;AAG/B,QAAMC,MAAM,GAAE,MAAI;AACdF,IAAAA,UAAU,KAAK,SAAf,GACAC,aAAa,CAAC,MAAD,CADb,GAEAA,aAAa,CAAC,SAAD,CAFb;AAGH,GAJD;;AAMA,SACI,oBAAC,aAAD;AACE,IAAA,OAAO,EAAE,MAAM;AAAEC,MAAAA,MAAM;AAAI,KAD7B;AAEE,IAAA,MAAM,EAAEF,UAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADJ;AASH,CAlBM","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {ReactComponent as svg1} from '../../svg/Compass.svg';\r\nimport {ReactComponent as svg2} from '../../svg/Compass.svg';\r\n\r\nconst ToggleWrapper = styled.span`\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    height: 50px;\r\n    position: relative;\r\n    width: 50px;\r\n\r\n    /*svg animations*/\r\n    @keyframes draw_in {\r\n        50% { stroke-dashoffset: 100%; }\r\n        100% { stroke-dashoffset: 0%; }\r\n      }\r\n      @keyframes draw_out {\r\n        50% { stroke-dashoffset: 0%; }\r\n        100% { stroke-dashoffset: 100%; }\r\n      }\r\n      @keyframes rotate_in_ccw {\r\n        0% { transform: rotate(0deg); }\r\n        100% { transform: rotate(180deg); }\r\n      }\r\n      @keyframes colorchange{\r\n        from{stroke:'#2C6975';}\r\n        to {stroke:'black';}\r\n      }\r\n    .svg1{\r\n        .compass_needle{\r\n            animation:colorchange 0.8s;\r\n        } \r\n    }\r\n\r\n    svg{\r\n        circle, line, polygon, path{\r\n            stroke: black;\r\n            stroke-linecap: round;\r\n            stroke-miterlimit: 10;\r\n            stroke-width: 5px;\r\n        }\r\n    }\r\n\r\n`;\r\nexport const CompassButton = () => {\r\n    const[iconStatus, setIconStatus] = React.useState('default');\r\n\r\n    const toggle =()=>{\r\n        iconStatus === 'default'\r\n      ? setIconStatus('open')\r\n      : setIconStatus('default');\r\n    }\r\n\r\n    return (\r\n        <ToggleWrapper\r\n          onClick={() => { toggle() }}\r\n          status={iconStatus}\r\n        >\r\n          <svg1 className='svg1' />\r\n          <svg2 className='svg2' />\r\n        </ToggleWrapper>\r\n      );\r\n}"]},"metadata":{},"sourceType":"module"}